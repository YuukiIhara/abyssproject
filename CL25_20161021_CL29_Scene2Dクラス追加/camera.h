//********************************************************************************************************************
// タイトル:		カメラ処理
// プログラム名:	camera.h
//********************************************************************************************************************
#ifndef _CAMERA_H_
#define _CAMERA_H_

//********************************************************************************************************************
// インクルードファイル
//********************************************************************************************************************
#include "main.h"

//********************************************************************************************************************
// クラス
//********************************************************************************************************************
// カメラクラス
class CCamera
{
public:
	CCamera();							// コンストラクタ
	~CCamera();							// デストラクタ
	HRESULT Init(void);
	void Uninit(void);
	void Update(void);
	void Set(void);
private:
	D3DXMATRIX m_mtxProjection;	// プロジェクションマトリックス
	D3DXMATRIX m_mtxView;		// ビューマトリックス

	D3DXVECTOR3 m_posV;			// 視点
	D3DXVECTOR3 m_posR;			// 注視点
	D3DXVECTOR3 m_vecU;			// 上方向ベクトル
	D3DXVECTOR3	m_posVDest;		// 視点の目的位置
	D3DXVECTOR3	m_posRDest;		// 注視点の目的位置
	D3DXVECTOR3 m_vecVR;		// 視点から注視点方向への単位ベクトル
	D3DXVECTOR3 m_vecVerToVR;	// ベクトルVRに垂直な単位ベクトル
	D3DXVECTOR3 m_rot;			// 向き（回転角）
	
	float m_fDistance;			// 視点と注視点の距離
	float m_fDistanceXZ;
	float m_fInitialDistance;	// 始めの視点と注視点の距離
	float m_fInitialSin;
	float m_fInitialCos;
};

#endif